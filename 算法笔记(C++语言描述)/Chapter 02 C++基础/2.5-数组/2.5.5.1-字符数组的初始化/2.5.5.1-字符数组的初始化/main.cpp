//
//  main.cpp
//  2.5.5.1-字符数组的初始化
//
//  Created by Enrica on 2018/7/24.
//  Copyright © 2018 Enrica. All rights reserved.
//

#include <iostream>

int main(int argc, const char * argv[]) {
    
    // 字符数组的初始化和普通数组的初始化相同，都可以直接写出所有元素的值即可
    char hello[12] = {'H', 'e', 'l', 'l', 'o', ',', 'w', 'o', 'r', 'l', 'd', '!'};
    
    // 遍历数组
    for (int i = 0; i < 12; i++) {
        printf("%c", hello[i]);
    }
    
    printf("\n");
    
    // 除了上面这种比较繁琐的方式之外，字符数组也可以通过直接赋值字符串来初始化。
    // 不过，这种做法仅限于初始化，在字符数组的其它地方不允许直接赋值整个字符串
    char str[12] = "HelloWorld!";  // 注意，这里总共只有11个字符，但是我们却留有12个位置。因为至少要留一个位置存储字符串末尾标志, 即空字符\0
    for (int i = 0; i < 12; i++) {
        printf("%c", str[i]);
    }
    
    printf("\n");
    return 0;
}

// 当C语言编译器在遇到长度为n的字符串字面量时，他会为字符串字面量分配长度为n + 1的内存空间。
// 这块内存空间将用来存储字符串字面量中的字符，以及一个用来标志字符串末尾的额外字符，也就是空
// 空字符。空字符是一个所有为都为0的字节，因此用转移序列\0来表示。
